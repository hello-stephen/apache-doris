# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Comment to trigger teamcity

on:
  issue_comment:
    types: [created, edited]

jobs:
  check-comment-if-need-to-trigger-teamcity:

    # This job only runs for pull request comments
    if: ${{ github.event.issue.pull_request && contains(fromJSON('["run buildall", "run compile", "run beut", "run feut", "run p0", "run p1", "run external", "run pipelinex_p0", "run clickbench", "run arm", "run tpch"]'), github.event.comment.body) }}

    runs-on: ubuntu-latest
    env:
      PULL_REQUEST_NUM: $(echo "${{ github.event.issue.pull_request.url }}" | awk -F/ '{print $NF}')
      LATEST_COMMIT: $(curl -s -H "Authorization:Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/pulls/$(echo '${{ github.event.issue.pull_request.url }}' | awk -F/ '{print $NF}')" > pr_details.json && jq -r '.head.sha' pr_details.json)
      COMMENT_BODY: ${{ github.event.comment.body }}

    steps:
    - name: "Parse comment"
      id: pr_comment
      run: |
        echo "COMMENT_BODY: ${COMMENT_BODY}"
        reg="run (buildall|compile|p0|p1|feut|beut|external|clickbench|pipelinex_p0|arm|tpch)( [1-9]*[0-9]+)*"
        COMMENT_TRIGGER_TYPE="$(echo "${COMMENT_BODY}" | xargs | grep -E "${reg}" | awk -F' ' '{print $2}' | sed -n 1p)"
        COMMENT_REPEAT_TIMES="$(echo "${COMMENT_BODY}" | xargs | grep -E "${reg}" | awk -F' ' '{print $3}' | sed -n 1p)"
        echo "COMMENT_TRIGGER_TYPE=${COMMENT_TRIGGER_TYPE}" >> "$GITHUB_OUTPUT"
        echo "COMMENT_REPEAT_TIMES=${COMMENT_REPEAT_TIMES}" >> "$GITHUB_OUTPUT"

    - name: 获取关联的 PR
      id: extract
      run: |
        echo "PULL_REQUEST_NUM is: ${{ env.PULL_REQUEST_NUM }}"
        echo "LATEST_COMMIT is: ${{ env.LATEST_COMMIT }}"
        echo "PULL_REQUEST_NUM=${{ env.PULL_REQUEST_NUM }}" >> "$GITHUB_OUTPUT"
        echo "LATEST_COMMIT=${{ env.LATEST_COMMIT }}" >> "$GITHUB_OUTPUT"

    - name: "Checkout PR ${{ steps.extract.outputs.PULL_REQUEST_NUM }} ${{ steps.extract.outputs.LATEST_COMMIT }}"
      uses: actions/checkout@v4
      with:
        ref: ${{ steps.extract.outputs.LATEST_COMMIT }}
        submodules: recursive

    - name: Paths filter
      uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          fe_ut:
            - 'fe/*'
            - 'fe_plugins/*'
            - 'bin/start_fe.sh'
            - 'bin/stop_fe.sh'
            - 'run-fe-ut.sh'
            - 'docs/zh-CN/docs/sql-manual/*'
            - 'docs/en/docs/sql-manual/*'

    - name: Trigger fe ut
      if: ${{ steps.pr_comment.outputs.COMMENT_TRIGGER_TYPE == 'feut' && steps.changes.outputs.fe_ut == 'true' }}
      run: |
        echo "-- COMMENT_TRIGGER_TYPE: ${{ steps.pr_comment.outputs.COMMENT_TRIGGER_TYPE }}"
        echo "-- COMMENT_REPEAT_TIMES: ${{ steps.pr_comment.outputs.COMMENT_REPEAT_TIMES }}"
        echo "trigger fe ut with teamcity api"
        echo "..."

    - name: Skip fe fe_ut
      if: ${{ steps.pr_comment.outputs.COMMENT_TRIGGER_TYPE == 'feut' && steps.changes.outputs.fe_ut == 'true' }}
      run: |
        echo "-- COMMENT_TRIGGER_TYPE: ${{ steps.pr_comment.outputs.COMMENT_TRIGGER_TYPE }}"
        echo "-- COMMENT_REPEAT_TIMES: ${{ steps.pr_comment.outputs.COMMENT_REPEAT_TIMES }}"
        echo "skip fe ut with teamcity api, just set to success"
        echo "..."





